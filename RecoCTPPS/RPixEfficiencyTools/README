RPixEfficiency

Author: Andrea Bellora

This tool produces some useful plots to quickly check PPS Tracking Efficiency.
It is available on: https://github.com/AndreaBellora/cmssw/tree/CMSSW_10_2_2_RPixEfficiency_dev

!!!WARNING!!!
CMS voms certificate and access to the ctpps eos directory is required to run the tool

From RPixEfficiencyTools do:

voms-proxy-init -voms cms -rfc -out x509up_u93252
./setup.sh <run_number>


This will setup the ReReco. Check that at least a dozen files are found and the JSONFile content looks like {"<run_number>": [[lumi1,lumi2],[lumi3,lumi4]]}.
It doesn't matter if lumi intervals are repeated.

./submitReReco.sh <run_number>

Wait until the job is finished (it can take several hours..).
Check with bjobs (to have a "real time check use" watch bjobs)

./submitEfficiencyAnalysis <run_number>

Wait until the job is finished (this is shorter, but can still take more than one hour).

root -l 'ViewPlots.C(<run_number
This produces the efficiency plots. Check that the results are ok (i.e. not that the detector is performing well, but that there hasn't been any error in the analysis).

If everything is ok run: ./cleanAndSave <run_number>

Every job is set to send an email to the user once it's finished. The email should report that the job is "DONE" and not "EXITED". If this isn't the case, check in its logfiles and errorfiles the error that caused the job to fail. If it's due to problems while getting files from the server, just resubmit the job with its ./submit script.
Multiple jobs can be run at the same time, as long as they operate on differen run numbers.